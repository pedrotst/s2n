// bike1_l1_kem_short.saw Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

///////////////////////////////////////////////////////////////////////////////
// Proof commands

// NOTE: The following is a two part proof. See the explanation in
//       bike_l1_kem.saw

// NOTE: Step 1 of 2 - non-success result
crypto_kem_dec_unsuccessful_ov <- verify_unint "BIKE1_L1_crypto_kem_dec"
    [ compute_syndrome_update_ov
    , secure_clean_e_ov
    , secure_clean_syndrome_ov
    , get_ss_ov, get_seeds_ov
    , count_ones_N_SIZE_ov
    , decode_op_ov
    ]
    [ "decode", "compute_syndrome", "compute_syndrome_update"
    , "get_ss", "count_ones", "is_bounded_compressed_idx_dv" ]
    crypto_kem_dec_unsuccessful_spec;

// NOTE: Step 2 of 2 - conditioned on a SUCCESS result
crypto_kem_dec_successful_ov <- verify_unint "BIKE1_L1_crypto_kem_dec"
    [compute_syndrome_update_ov
    , secure_clean_e_ov
    , secure_clean_syndrome_ov
    , get_ss_ov, get_seeds_ov
    , count_ones_N_SIZE_ov
    , decode_op_ov
    ]
    [ "decode", "compute_syndrome", "compute_syndrome_update"
    , "get_ss", "count_ones", "is_bounded_compressed_idx_dv" ]
    crypto_kem_dec_successful_spec;


